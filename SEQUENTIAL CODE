#SEQUENTIAL CODE:
import numpy as np
import pandas as pd
from keras.models import Sequential
from keras.layers import Dense
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score
import time

np.random.seed(7)

dataset = pd.read_csv("/content/diabetes.csv")

X = dataset.loc[:, ['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age']]
Y = dataset.loc[:, 'Outcome']

model = Sequential()
model.add(Dense(12, input_dim=8, activation='relu'))
model.add(Dense(8, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

start_time = time.time()
model.fit(X, Y, epochs=150, batch_size=10)
execution_time = time.time() - start_time

# Predict the probabilities
y_pred_prob = model.predict(X)
# Convert probabilities to binary predictions
y_pred = np.round(y_pred_prob).flatten()

accuracy = accuracy_score(Y, y_pred)
precision = precision_score(Y, y_pred)
recall = recall_score(Y, y_pred)
f1 = f1_score(Y, y_pred)

print("Accuracy: %.2f%%" % (accuracy * 100))
print("Execution Time: %.2f seconds" % execution_time)
print("Precision: %.2f" % precision)
print("Recall: %.2f" % recall)
print("F1-Score: %.2f" % f1)

